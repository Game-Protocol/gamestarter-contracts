{
  "contractName": "MockTestToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "mintingFinished",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "reclaimToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "contractAddr",
          "type": "address"
        }
      ],
      "name": "reclaimContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finishMinting",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "reclaimEther",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from_",
          "type": "address"
        },
        {
          "name": "value_",
          "type": "uint256"
        },
        {
          "name": "data_",
          "type": "bytes"
        }
      ],
      "name": "tokenFallback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MintFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "burner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Pause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unpause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    }
  ],
  "bytecode": "0x60806040526003805460a060020a60ff02191690556006805461ff00191690553480156200002c57600080fd5b50604080518082018252600d81527f4d6f636b54657374546f6b656e000000000000000000000000000000000000006020808301918252835180850190945260038085527f4d54540000000000000000000000000000000000000000000000000000000000918501919091528054600160a060020a03191633179055815191929183918391601291849184918491620000c89160049162000288565b508151620000de90600590602085019062000288565b506006805460ff191660ff92909216919091179055505034156200010157600080fd5b50506003805460a060020a60ff02199081167401000000000000000000000000000000000000000017169055506200014f915033905067d02ab486cedc000064010000000062000156810204565b506200032d565b600354600090600160a060020a031633146200017157600080fd5b600654610100900460ff16156200018757600080fd5b600154620001a49083640100000000620011cc6200027482021704565b600155600160a060020a038316600090815260208190526040902054620001da9083640100000000620011cc6200027482021704565b600160a060020a03841660008181526020818152604091829020939093558051858152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a2604080518381529051600160a060020a038516916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a350600192915050565b818101828110156200028257fe5b92915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002cb57805160ff1916838001178555620002fb565b82800160010185558215620002fb579182015b82811115620002fb578251825591602001919060010190620002de565b50620003099291506200030d565b5090565b6200032a91905b8082111562000309576000815560010162000314565b90565b6116ee806200033d6000396000f3006080604052600436106101485763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166305d2035b811461015757806306fdde0314610180578063095ea7b31461020a57806317ffc3201461023b57806318160ddd1461026b57806323b872dd146102925780632aed7f3f146102c9578063313ce567146102f75780633f4ba83a1461032257806340c10f191461033757806342966c68146103685780635c975abb14610380578063661884631461039557806370a08231146103c6578063715018a6146103f45780637d64bcb4146104095780638456cb591461041e5780638da5cb5b1461043357806395d89b41146104715780639f727c2714610486578063a9059cbb1461049b578063c0ee0b8a146104cc578063d73dd6231461050a578063dd62ed3e1461053b578063f2fde38b1461056f575b34801561015457600080fd5b50005b34801561016357600080fd5b5061016c61059d565b604080519115158252519081900360200190f35b34801561018c57600080fd5b506101956105ab565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101cf5781810151838201526020016101b7565b50505050905090810190601f1680156101fc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561021657600080fd5b5061016c73ffffffffffffffffffffffffffffffffffffffff60043516602435610657565b34801561024757600080fd5b5061026973ffffffffffffffffffffffffffffffffffffffff60043516610693565b005b34801561027757600080fd5b50610280610788565b60408051918252519081900360200190f35b34801561029e57600080fd5b5061016c73ffffffffffffffffffffffffffffffffffffffff6004358116906024351660443561078e565b3480156102d557600080fd5b5061026973ffffffffffffffffffffffffffffffffffffffff600435166107cc565b34801561030357600080fd5b5061030c610884565b6040805160ff9092168252519081900360200190f35b34801561032e57600080fd5b5061026961088d565b34801561034357600080fd5b5061016c73ffffffffffffffffffffffffffffffffffffffff6004351660243561092d565b34801561037457600080fd5b50610269600435610a69565b34801561038c57600080fd5b5061016c610a76565b3480156103a157600080fd5b5061016c73ffffffffffffffffffffffffffffffffffffffff60043516602435610a97565b3480156103d257600080fd5b5061028073ffffffffffffffffffffffffffffffffffffffff60043516610acc565b34801561040057600080fd5b50610269610af4565b34801561041557600080fd5b5061016c610b87565b34801561042a57600080fd5b50610269610c1e565b34801561043f57600080fd5b50610448610cd4565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b34801561047d57600080fd5b50610195610cf0565b34801561049257600080fd5b50610269610d69565b3480156104a757600080fd5b5061016c73ffffffffffffffffffffffffffffffffffffffff60043516602435610dd4565b3480156104d857600080fd5b506102696004803573ffffffffffffffffffffffffffffffffffffffff16906024803591604435918201910135610e09565b34801561051657600080fd5b5061016c73ffffffffffffffffffffffffffffffffffffffff60043516602435610e0e565b34801561054757600080fd5b5061028073ffffffffffffffffffffffffffffffffffffffff60043581169060243516610e43565b34801561057b57600080fd5b5061026973ffffffffffffffffffffffffffffffffffffffff60043516610e7b565b600654610100900460ff1681565b6004805460408051602060026001851615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190941693909304601f8101849004840282018401909252818152929183018282801561064f5780601f106106245761010080835404028352916020019161064f565b820191906000526020600020905b81548152906001019060200180831161063257829003601f168201915b505050505081565b60035460009074010000000000000000000000000000000000000000900460ff161561068257600080fd5b61068c8383610ea8565b9392505050565b60035460009073ffffffffffffffffffffffffffffffffffffffff1633146106ba57600080fd5b604080517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152905173ffffffffffffffffffffffffffffffffffffffff8416916370a082319160248083019260209291908290030181600087803b15801561072857600080fd5b505af115801561073c573d6000803e3d6000fd5b505050506040513d602081101561075257600080fd5b50516003549091506107849073ffffffffffffffffffffffffffffffffffffffff84811691168363ffffffff610f1b16565b5050565b60015490565b60035460009074010000000000000000000000000000000000000000900460ff16156107b957600080fd5b6107c4848484610ffa565b949350505050565b60035460009073ffffffffffffffffffffffffffffffffffffffff1633146107f357600080fd5b50600354604080517ff2fde38b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff92831660048201529051839283169163f2fde38b91602480830192600092919082900301818387803b15801561086857600080fd5b505af115801561087c573d6000803e3d6000fd5b505050505050565b60065460ff1681565b60035473ffffffffffffffffffffffffffffffffffffffff1633146108b157600080fd5b60035474010000000000000000000000000000000000000000900460ff1615156108da57600080fd5b600380547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b60035460009073ffffffffffffffffffffffffffffffffffffffff16331461095457600080fd5b600654610100900460ff161561096957600080fd5b60015461097c908363ffffffff6111cc16565b60015573ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020546109b5908363ffffffff6111cc16565b73ffffffffffffffffffffffffffffffffffffffff841660008181526020818152604091829020939093558051858152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a260408051838152905173ffffffffffffffffffffffffffffffffffffffff8516916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a350600192915050565b610a7333826111df565b50565b60035474010000000000000000000000000000000000000000900460ff1681565b60035460009074010000000000000000000000000000000000000000900460ff1615610ac257600080fd5b61068c8383611321565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60035473ffffffffffffffffffffffffffffffffffffffff163314610b1857600080fd5b60035460405173ffffffffffffffffffffffffffffffffffffffff909116907ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482090600090a2600380547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60035460009073ffffffffffffffffffffffffffffffffffffffff163314610bae57600080fd5b600654610100900460ff1615610bc357600080fd5b600680547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a150600190565b60035473ffffffffffffffffffffffffffffffffffffffff163314610c4257600080fd5b60035474010000000000000000000000000000000000000000900460ff1615610c6a57600080fd5b600380547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b60035473ffffffffffffffffffffffffffffffffffffffff1681565b6005805460408051602060026001851615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190941693909304601f8101849004840282018401909252818152929183018282801561064f5780601f106106245761010080835404028352916020019161064f565b60035473ffffffffffffffffffffffffffffffffffffffff163314610d8d57600080fd5b60035460405173ffffffffffffffffffffffffffffffffffffffff90911690303180156108fc02916000818181858888f19350505050158015610a73573d6000803e3d6000fd5b60035460009074010000000000000000000000000000000000000000900460ff1615610dff57600080fd5b61068c8383611445565b600080fd5b60035460009074010000000000000000000000000000000000000000900460ff1615610e3957600080fd5b61068c838361154d565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260026020908152604080832093909416825291909152205490565b60035473ffffffffffffffffffffffffffffffffffffffff163314610e9f57600080fd5b610a7381611600565b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610fbe57600080fd5b505af1158015610fd2573d6000803e3d6000fd5b505050506040513d6020811015610fe857600080fd5b50511515610ff557600080fd5b505050565b600073ffffffffffffffffffffffffffffffffffffffff8316151561101e57600080fd5b73ffffffffffffffffffffffffffffffffffffffff841660009081526020819052604090205482111561105057600080fd5b73ffffffffffffffffffffffffffffffffffffffff8416600090815260026020908152604080832033845290915290205482111561108d57600080fd5b73ffffffffffffffffffffffffffffffffffffffff84166000908152602081905260409020546110c3908363ffffffff6116b016565b73ffffffffffffffffffffffffffffffffffffffff8086166000908152602081905260408082209390935590851681522054611105908363ffffffff6111cc16565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208181526040808320949094559187168152600282528281203382529091522054611154908363ffffffff6116b016565b73ffffffffffffffffffffffffffffffffffffffff808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b818101828110156111d957fe5b92915050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205481111561121157600080fd5b73ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902054611247908263ffffffff6116b016565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902055600154611280908263ffffffff6116b016565b60015560408051828152905173ffffffffffffffffffffffffffffffffffffffff8416917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a260408051828152905160009173ffffffffffffffffffffffffffffffffffffffff8516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b33600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff86168452909152812054808311156113905733600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff881684529091528120556113d2565b6113a0818463ffffffff6116b016565b33600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff891684529091529020555b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff89168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600073ffffffffffffffffffffffffffffffffffffffff8316151561146957600080fd5b3360009081526020819052604090205482111561148557600080fd5b336000908152602081905260409020546114a5908363ffffffff6116b016565b336000908152602081905260408082209290925573ffffffffffffffffffffffffffffffffffffffff8516815220546114e4908363ffffffff6111cc16565b73ffffffffffffffffffffffffffffffffffffffff8416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b33600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915281205461158e908363ffffffff6111cc16565b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff89168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b73ffffffffffffffffffffffffffffffffffffffff8116151561162257600080fd5b60035460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6000828211156116bc57fe5b509003905600a165627a7a723058209481a787a90724a07ab16d07679e25abd585a25b5ba2d2fca131fb70e9a199d40029",
  "deployedBytecode": "0x6080604052600436106101485763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166305d2035b811461015757806306fdde0314610180578063095ea7b31461020a57806317ffc3201461023b57806318160ddd1461026b57806323b872dd146102925780632aed7f3f146102c9578063313ce567146102f75780633f4ba83a1461032257806340c10f191461033757806342966c68146103685780635c975abb14610380578063661884631461039557806370a08231146103c6578063715018a6146103f45780637d64bcb4146104095780638456cb591461041e5780638da5cb5b1461043357806395d89b41146104715780639f727c2714610486578063a9059cbb1461049b578063c0ee0b8a146104cc578063d73dd6231461050a578063dd62ed3e1461053b578063f2fde38b1461056f575b34801561015457600080fd5b50005b34801561016357600080fd5b5061016c61059d565b604080519115158252519081900360200190f35b34801561018c57600080fd5b506101956105ab565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101cf5781810151838201526020016101b7565b50505050905090810190601f1680156101fc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561021657600080fd5b5061016c73ffffffffffffffffffffffffffffffffffffffff60043516602435610657565b34801561024757600080fd5b5061026973ffffffffffffffffffffffffffffffffffffffff60043516610693565b005b34801561027757600080fd5b50610280610788565b60408051918252519081900360200190f35b34801561029e57600080fd5b5061016c73ffffffffffffffffffffffffffffffffffffffff6004358116906024351660443561078e565b3480156102d557600080fd5b5061026973ffffffffffffffffffffffffffffffffffffffff600435166107cc565b34801561030357600080fd5b5061030c610884565b6040805160ff9092168252519081900360200190f35b34801561032e57600080fd5b5061026961088d565b34801561034357600080fd5b5061016c73ffffffffffffffffffffffffffffffffffffffff6004351660243561092d565b34801561037457600080fd5b50610269600435610a69565b34801561038c57600080fd5b5061016c610a76565b3480156103a157600080fd5b5061016c73ffffffffffffffffffffffffffffffffffffffff60043516602435610a97565b3480156103d257600080fd5b5061028073ffffffffffffffffffffffffffffffffffffffff60043516610acc565b34801561040057600080fd5b50610269610af4565b34801561041557600080fd5b5061016c610b87565b34801561042a57600080fd5b50610269610c1e565b34801561043f57600080fd5b50610448610cd4565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b34801561047d57600080fd5b50610195610cf0565b34801561049257600080fd5b50610269610d69565b3480156104a757600080fd5b5061016c73ffffffffffffffffffffffffffffffffffffffff60043516602435610dd4565b3480156104d857600080fd5b506102696004803573ffffffffffffffffffffffffffffffffffffffff16906024803591604435918201910135610e09565b34801561051657600080fd5b5061016c73ffffffffffffffffffffffffffffffffffffffff60043516602435610e0e565b34801561054757600080fd5b5061028073ffffffffffffffffffffffffffffffffffffffff60043581169060243516610e43565b34801561057b57600080fd5b5061026973ffffffffffffffffffffffffffffffffffffffff60043516610e7b565b600654610100900460ff1681565b6004805460408051602060026001851615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190941693909304601f8101849004840282018401909252818152929183018282801561064f5780601f106106245761010080835404028352916020019161064f565b820191906000526020600020905b81548152906001019060200180831161063257829003601f168201915b505050505081565b60035460009074010000000000000000000000000000000000000000900460ff161561068257600080fd5b61068c8383610ea8565b9392505050565b60035460009073ffffffffffffffffffffffffffffffffffffffff1633146106ba57600080fd5b604080517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152905173ffffffffffffffffffffffffffffffffffffffff8416916370a082319160248083019260209291908290030181600087803b15801561072857600080fd5b505af115801561073c573d6000803e3d6000fd5b505050506040513d602081101561075257600080fd5b50516003549091506107849073ffffffffffffffffffffffffffffffffffffffff84811691168363ffffffff610f1b16565b5050565b60015490565b60035460009074010000000000000000000000000000000000000000900460ff16156107b957600080fd5b6107c4848484610ffa565b949350505050565b60035460009073ffffffffffffffffffffffffffffffffffffffff1633146107f357600080fd5b50600354604080517ff2fde38b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff92831660048201529051839283169163f2fde38b91602480830192600092919082900301818387803b15801561086857600080fd5b505af115801561087c573d6000803e3d6000fd5b505050505050565b60065460ff1681565b60035473ffffffffffffffffffffffffffffffffffffffff1633146108b157600080fd5b60035474010000000000000000000000000000000000000000900460ff1615156108da57600080fd5b600380547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b60035460009073ffffffffffffffffffffffffffffffffffffffff16331461095457600080fd5b600654610100900460ff161561096957600080fd5b60015461097c908363ffffffff6111cc16565b60015573ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020546109b5908363ffffffff6111cc16565b73ffffffffffffffffffffffffffffffffffffffff841660008181526020818152604091829020939093558051858152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a260408051838152905173ffffffffffffffffffffffffffffffffffffffff8516916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a350600192915050565b610a7333826111df565b50565b60035474010000000000000000000000000000000000000000900460ff1681565b60035460009074010000000000000000000000000000000000000000900460ff1615610ac257600080fd5b61068c8383611321565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60035473ffffffffffffffffffffffffffffffffffffffff163314610b1857600080fd5b60035460405173ffffffffffffffffffffffffffffffffffffffff909116907ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482090600090a2600380547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60035460009073ffffffffffffffffffffffffffffffffffffffff163314610bae57600080fd5b600654610100900460ff1615610bc357600080fd5b600680547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a150600190565b60035473ffffffffffffffffffffffffffffffffffffffff163314610c4257600080fd5b60035474010000000000000000000000000000000000000000900460ff1615610c6a57600080fd5b600380547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b60035473ffffffffffffffffffffffffffffffffffffffff1681565b6005805460408051602060026001851615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190941693909304601f8101849004840282018401909252818152929183018282801561064f5780601f106106245761010080835404028352916020019161064f565b60035473ffffffffffffffffffffffffffffffffffffffff163314610d8d57600080fd5b60035460405173ffffffffffffffffffffffffffffffffffffffff90911690303180156108fc02916000818181858888f19350505050158015610a73573d6000803e3d6000fd5b60035460009074010000000000000000000000000000000000000000900460ff1615610dff57600080fd5b61068c8383611445565b600080fd5b60035460009074010000000000000000000000000000000000000000900460ff1615610e3957600080fd5b61068c838361154d565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260026020908152604080832093909416825291909152205490565b60035473ffffffffffffffffffffffffffffffffffffffff163314610e9f57600080fd5b610a7381611600565b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610fbe57600080fd5b505af1158015610fd2573d6000803e3d6000fd5b505050506040513d6020811015610fe857600080fd5b50511515610ff557600080fd5b505050565b600073ffffffffffffffffffffffffffffffffffffffff8316151561101e57600080fd5b73ffffffffffffffffffffffffffffffffffffffff841660009081526020819052604090205482111561105057600080fd5b73ffffffffffffffffffffffffffffffffffffffff8416600090815260026020908152604080832033845290915290205482111561108d57600080fd5b73ffffffffffffffffffffffffffffffffffffffff84166000908152602081905260409020546110c3908363ffffffff6116b016565b73ffffffffffffffffffffffffffffffffffffffff8086166000908152602081905260408082209390935590851681522054611105908363ffffffff6111cc16565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208181526040808320949094559187168152600282528281203382529091522054611154908363ffffffff6116b016565b73ffffffffffffffffffffffffffffffffffffffff808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b818101828110156111d957fe5b92915050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205481111561121157600080fd5b73ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902054611247908263ffffffff6116b016565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902055600154611280908263ffffffff6116b016565b60015560408051828152905173ffffffffffffffffffffffffffffffffffffffff8416917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a260408051828152905160009173ffffffffffffffffffffffffffffffffffffffff8516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b33600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff86168452909152812054808311156113905733600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff881684529091528120556113d2565b6113a0818463ffffffff6116b016565b33600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff891684529091529020555b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff89168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600073ffffffffffffffffffffffffffffffffffffffff8316151561146957600080fd5b3360009081526020819052604090205482111561148557600080fd5b336000908152602081905260409020546114a5908363ffffffff6116b016565b336000908152602081905260408082209290925573ffffffffffffffffffffffffffffffffffffffff8516815220546114e4908363ffffffff6111cc16565b73ffffffffffffffffffffffffffffffffffffffff8416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b33600090815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915281205461158e908363ffffffff6111cc16565b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff89168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b73ffffffffffffffffffffffffffffffffffffffff8116151561162257600080fd5b60035460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6000828211156116bc57fe5b509003905600a165627a7a723058209481a787a90724a07ab16d07679e25abd585a25b5ba2d2fca131fb70e9a199d40029",
  "sourceMap": "95:302:11:-;;;247:26:54;;;-1:-1:-1;;;;;;247:26:54;;;436:35:73;;;-1:-1:-1;;436:35:73;;;271:123:11;5:2:-1;;;;30:1;27;20:12;5:2;-1:-1;402:111:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;567:18:62;;-1:-1:-1;;;;;;567:18:62;575:10;567:18;;;463:12:70;;402:111:17;;;;;;;477:2;;402:111;;;;477:2;;463:12:70;;:4;;:12;:::i;:::-;-1:-1:-1;481:16:70;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;503:8:70;:20;;-1:-1:-1;;503:20:70;;;;;;;;;;;;-1:-1:-1;;958:9:59;:14;950:23;;;;;;-1:-1:-1;;492:6:17;:13;;-1:-1:-1;;;;;;492:13:17;;;;;337:14:11;;;-1:-1:-1;362:24:11;;-1:-1:-1;367:10:11;;-1:-1:-1;165:13:11;362:4;;;;:24;:::i;:::-;;95:302;;854:312:73;600:5;;968:4;;-1:-1:-1;;;;;600:5:73;586:10;:19;578:28;;;;;;511:15;;;;;;;510:16;502:25;;;;;;997:12;;:25;;1014:7;997:16;;;;;;:25;:::i;:::-;982:12;:40;-1:-1:-1;;;;;1044:13:73;;:8;:13;;;;;;;;;;;:26;;1062:7;1044:17;;;;;;:26;:::i;:::-;-1:-1:-1;;;;;1028:13:73;;:8;:13;;;;;;;;;;;;:42;;;;1081:18;;;;;;;1028:13;;1081:18;;;;;;;;;1110:34;;;;;;;;-1:-1:-1;;;;;1110:34:73;;;1127:1;;1110:34;;;;;;;;;-1:-1:-1;1157:4:73;854:312;;;;:::o;1214:123:55:-;1293:5;;;1311:6;;;;1304:14;;;;1214:123;;;;:::o;95:302:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;95:302:11;;;-1:-1:-1;95:302:11;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "95:302:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;95:302:11;;436:35:73;;8:9:-1;5:2;;;30:1;27;20:12;5:2;436:35:73;;;;;;;;;;;;;;;;;;;;;;319:18:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;319:18:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;319:18:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;592:162:74;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;592:162:74;;;;;;;;;598:149:56;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;598:149:56;;;;;;;;;371:83:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;371:83:68;;;;;;;;;;;;;;;;;;;;400:188:74;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;400:188:74;;;;;;;;;;;;;;481:164:58;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;481:164:58;;;;;;;365:21:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;365:21:70;;;;;;;;;;;;;;;;;;;;;;;838:92:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;838:92:54;;;;854:312:73;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;854:312:73;;;;;;;;;353:73:69;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;353:73:69;;;;;247:26:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;247:26:54;;;;957:205:74;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;957:205:74;;;;;;;;;1131:99:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1131:99:68;;;;;;;1001:111:62;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:62;;;;1280:140:73;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1280:140:73;;;;666:90:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;666:90:54;;;;238:20:62;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:62;;;;;;;;;;;;;;;;;;;;;;;341::70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;341:20:70;;;;1190:91:59;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1190:91:59;;;;242:154:74;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;242:154:74;;;;;;;;;637:129:60;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;637:129:60;;;;;;;;;;;;;;;;;;;;;758:195:74;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;758:195:74;;;;;;;;;2321:153:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2321:153:76;;;;;;;;;;;;1274:103:62;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1274:103:62;;;;;;;436:35:73;;;;;;;;;:::o;319:18:70:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;592:162:74:-;416:6:54;;697:4:74;;416:6:54;;;;;415:7;407:16;;;;;;718:31:74;732:8;742:6;718:13;:31::i;:::-;711:38;592:162;-1:-1:-1;;;592:162:74:o;598:149:56:-;719:5:62;;663:15:56;;719:5:62;;705:10;:19;697:28;;;;;;681:21:56;;;;;;697:4;681:21;;;;;;:15;;;;;;:21;;;;;;;;;;;;;;-1:-1:-1;681:15:56;:21;;;5:2:-1;;;;30:1;27;20:12;5:2;681:21:56;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;681:21:56;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;681:21:56;727:5;;681:21;;-1:-1:-1;708:34:56;;727:5;708:18;;;;727:5;681:21;708:34;:18;:34;:::i;:::-;598:149;;:::o;371:83:68:-;437:12;;371:83;:::o;400:188:74:-;416:6:54;;524:4:74;;416:6:54;;;;;415:7;407:16;;;;;;545:38:74;564:5;571:3;576:6;545:18;:38::i;:::-;538:45;400:188;-1:-1:-1;;;;400:188:74:o;481:164:58:-;719:5:62;;553:20:58;;719:5:62;;705:10;:19;697:28;;;;;;-1:-1:-1;634:5:58;;603:37;;;;;;:30;634:5;;;603:37;;;;;;584:12;;603:30;;;;;:37;;;;;634:5;;603:37;;;;;;;634:5;603:30;:37;;;5:2:-1;;;;30:1;27;20:12;5:2;603:37:58;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;603:37:58;;;;481:164;;:::o;365:21:70:-;;;;;;:::o;838:92:54:-;719:5:62;;;;705:10;:19;697:28;;;;;;568:6:54;;;;;;;560:15;;;;;;;;891:6;:14;;;;;;916:9;;;;900:5;;916:9;838:92::o;854:312:73:-;600:5;;968:4;;600:5;;586:10;:19;578:28;;;;;;511:15;;;;;;;510:16;502:25;;;;;;997:12;;:25;;1014:7;997:25;:16;:25;:::i;:::-;982:12;:40;1044:13;;;:8;:13;;;;;;;;;;;:26;;1062:7;1044:26;:17;:26;:::i;:::-;1028:13;;;:8;:13;;;;;;;;;;;;:42;;;;1081:18;;;;;;;1028:13;;1081:18;;;;;;;;;1110:34;;;;;;;;;;;;1127:1;;1110:34;;;;;;;;;-1:-1:-1;1157:4:73;854:312;;;;:::o;353:73:69:-;396:25;402:10;414:6;396:5;:25::i;:::-;353:73;:::o;247:26:54:-;;;;;;;;;:::o;957:205:74:-;416:6:54;;1078:12:74;;416:6:54;;;;;415:7;407:16;;;;;;1107:50:74;1130:8;1140:16;1107:22;:50::i;1131:99:68:-;1209:16;;1187:7;1209:16;;;;;;;;;;;;1131:99::o;1001:111:62:-;719:5;;;;705:10;:19;697:28;;;;;;1077:5;;1058:25;;1077:5;;;;;1058:25;;1077:5;;1058:25;1089:5;:18;;;;;;1001:111::o;1280:140:73:-;719:5:62;;1339:4:73;;719:5:62;;705:10;:19;697:28;;;;;;511:15:73;;;;;;;510:16;502:25;;;;;;1351:15;:22;;;;;;;;1384:14;;;;1351:22;;1384:14;-1:-1:-1;1411:4:73;1280:140;:::o;666:90:54:-;719:5:62;;;;705:10;:19;697:28;;;;;;416:6:54;;;;;;;415:7;407:16;;;;;;720:6;:13;;;;;;;;744:7;;;;720:13;;744:7;666:90::o;238:20:62:-;;;;;;:::o;341::70:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1190:91:59;719:5:62;;;;705:10;:19;697:28;;;;;;1239:5:59;;:37;;:5;;;;;1262:4;1254:21;1239:37;;;;;:5;:37;:5;:37;1254:21;1239:5;:37;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;242:154:74;416:6:54;;343:4:74;;416:6:54;;;;;415:7;407:16;;;;;;364:27:74;379:3;384:6;364:14;:27::i;637:129:60:-;753:8;;;758:195:74;416:6:54;;874:12:74;;416:6:54;;;;;415:7;407:16;;;;;;903:45:74;926:8;936:11;903:22;:45::i;2321:153:76:-;2444:15;;;;2420:7;2444:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;2321:153::o;1274:103:62:-;719:5;;;;705:10;:19;697:28;;;;;;1343:29;1362:9;1343:18;:29::i;1814:188:76:-;1901:10;1881:4;1893:19;;;:7;:19;;;;;;;;;:29;;;;;;;;;;;:38;;;1942;;;;;;;1881:4;;1893:29;;1901:10;;1942:38;;;;;;;;-1:-1:-1;1993:4:76;1814:188;;;;:::o;368:121:75:-;458:5;:14;;;473:2;477:5;458:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;458:25:75;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;458:25:75;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;458:25:75;450:34;;;;;;;;368:121;;;:::o;726:470:76:-;832:4;854:17;;;;;846:26;;;;;;896:15;;;:8;:15;;;;;;;;;;;886:25;;;878:34;;;;;;936:14;;;;;;;:7;:14;;;;;;;;951:10;936:26;;;;;;;;926:36;;;918:45;;;;;;988:15;;;:8;:15;;;;;;;;;;;:27;;1008:6;988:27;:19;:27;:::i;:::-;970:15;;;;:8;:15;;;;;;;;;;;:45;;;;1037:13;;;;;;;:25;;1055:6;1037:25;:17;:25;:::i;:::-;1021:13;;;;:8;:13;;;;;;;;;;;:41;;;;1097:14;;;;;:7;:14;;;;;1112:10;1097:26;;;;;;;:38;;1128:6;1097:38;:30;:38;:::i;:::-;1068:14;;;;;;;;:7;:14;;;;;;;;1083:10;1068:26;;;;;;;;:67;;;;1146:28;;;;;;;;;;;1068:14;;1146:28;;;;;;;;;;;-1:-1:-1;1187:4:76;726:470;;;;;:::o;1214:123:55:-;1293:5;;;1311:6;;;;1304:14;;;;1214:123;;;;:::o;430:438:69:-;508:14;;;:8;:14;;;;;;;;;;;498:24;;;490:33;;;;;;718:14;;;:8;:14;;;;;;;;;;;:26;;737:6;718:26;:18;:26;:::i;:::-;701:14;;;:8;:14;;;;;;;;;;:43;765:12;;:24;;782:6;765:24;:16;:24;:::i;:::-;750:12;:39;800:18;;;;;;;;;;;;;;;;;;;;;;829:34;;;;;;;;852:1;;829:34;;;;;;;;;;;;;430:438;;:::o;3679:431:76:-;3826:10;3785:4;3818:19;;;:7;:19;;;;;;;;;:29;;;;;;;;;;3857:27;;;3853:164;;;3902:10;3926:1;3894:19;;;:7;:19;;;;;;;;;:29;;;;;;;;;:33;3853:164;;;3980:30;:8;3993:16;3980:30;:12;:30;:::i;:::-;3956:10;3948:19;;;;:7;:19;;;;;;;;;:29;;;;;;;;;:62;3853:164;4036:10;4058:19;;;;:7;:19;;;;;;;;4027:61;;;4058:29;;;;;;;;;;;4027:61;;;;;;;;;4036:10;4027:61;;;;;;;;;;;-1:-1:-1;4101:4:76;;3679:431;-1:-1:-1;;;3679:431:76:o;608:321:68:-;671:4;691:17;;;;;683:26;;;;;;742:10;733:8;:20;;;;;;;;;;;723:30;;;715:39;;;;;;793:10;784:8;:20;;;;;;;;;;;:32;;809:6;784:32;:24;:32;:::i;:::-;770:10;761:8;:20;;;;;;;;;;;:55;;;;:20;838:13;;;;;;:25;;856:6;838:25;:17;:25;:::i;:::-;822:13;;;:8;:13;;;;;;;;;;;;:41;;;;874:33;;;;;;;822:13;;883:10;;874:33;;;;;;;;;;-1:-1:-1;920:4:68;608:321;;;;:::o;2926:296:76:-;3089:10;3027:4;3081:19;;;:7;:19;;;;;;;;;:29;;;;;;;;;;:46;;3115:11;3081:46;:33;:46;:::i;:::-;3049:10;3041:19;;;;:7;:19;;;;;;;;;:29;;;;;;;;;;;;:87;;;3139:61;;;;;;3041:29;;3139:61;;;;;;;;;;;-1:-1:-1;3213:4:76;2926:296;;;;:::o;1512:171:62:-;1582:23;;;;;1574:32;;;;;;1638:5;;1617:38;;;;;;;1638:5;;1617:38;;1638:5;;1617:38;1661:5;:17;;;;;;;;;;;;;;;1512:171::o;1042:110:55:-;1100:7;1122:6;;;;1115:14;;;;-1:-1:-1;1142:5:55;;;1042:110::o",
  "source": "pragma solidity ^0.4.24;\r\n\r\nimport \"../token/GameToken.sol\";\r\n\r\n/**\r\n * @title MockToken\r\n */\r\ncontract MockTestToken is GameToken\r\n{\r\n    uint256 constant AMOUNT = 15 * 10 ** 18;\r\n    /**\r\n    * @dev Constructor that gives msg.sender all of existing tokens\r\n    */\r\n    constructor() public GameToken(\"MockTestToken\", \"MTT\") {\r\n        paused = false;\r\n        mint(msg.sender, AMOUNT);\r\n    }\r\n}",
  "sourcePath": "D:\\Vlad\\CryptoCurrency\\Truffle Projects\\Game_Starter\\contracts\\mocks\\MockTestToken.sol",
  "ast": {
    "absolutePath": "/D/Vlad/CryptoCurrency/Truffle Projects/Game_Starter/contracts/mocks/MockTestToken.sol",
    "exportedSymbols": {
      "MockTestToken": [
        1066
      ]
    },
    "id": 1067,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1037,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:11"
      },
      {
        "absolutePath": "/D/Vlad/CryptoCurrency/Truffle Projects/Game_Starter/contracts/token/GameToken.sol",
        "file": "../token/GameToken.sol",
        "id": 1038,
        "nodeType": "ImportDirective",
        "scope": 1067,
        "sourceUnit": 1445,
        "src": "28:32:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1039,
              "name": "GameToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1444,
              "src": "121:9:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GameToken_$1444",
                "typeString": "contract GameToken"
              }
            },
            "id": 1040,
            "nodeType": "InheritanceSpecifier",
            "src": "121:9:11"
          }
        ],
        "contractDependencies": [
          1211,
          1444,
          4872,
          6610,
          6737,
          6815,
          6851,
          6876,
          6888,
          6974,
          7523,
          7594,
          7628,
          7671,
          7703,
          7809,
          7911,
          8220
        ],
        "contractKind": "contract",
        "documentation": "@title MockToken\r",
        "fullyImplemented": true,
        "id": 1066,
        "linearizedBaseContracts": [
          1066,
          1444,
          1211,
          6888,
          6815,
          6876,
          6737,
          6851,
          7809,
          7628,
          7594,
          7911,
          6610,
          6974,
          8220,
          7523,
          4872,
          7671,
          7703
        ],
        "name": "MockTestToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1047,
            "name": "AMOUNT",
            "nodeType": "VariableDeclaration",
            "scope": 1066,
            "src": "139:39:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1041,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "139:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_15000000000000000000_by_1",
                "typeString": "int_const 15000000000000000000"
              },
              "id": 1046,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3135",
                "id": 1042,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "165:2:11",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_15_by_1",
                  "typeString": "int_const 15"
                },
                "value": "15"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                },
                "id": 1045,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "hexValue": "3130",
                  "id": 1043,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "170:2:11",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "argumentTypes": null,
                  "hexValue": "3138",
                  "id": 1044,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "176:2:11",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_18_by_1",
                    "typeString": "int_const 18"
                  },
                  "value": "18"
                },
                "src": "170:8:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                }
              },
              "src": "165:13:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_15000000000000000000_by_1",
                "typeString": "int_const 15000000000000000000"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1064,
              "nodeType": "Block",
              "src": "326:68:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1054,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6562,
                      "src": "337:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 1055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "346:5:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "337:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1057,
                  "nodeType": "ExpressionStatement",
                  "src": "337:14:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1059,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8235,
                          "src": "367:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "367:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1061,
                        "name": "AMOUNT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1047,
                        "src": "379:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1058,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7789,
                      "src": "362:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 1062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "362:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1063,
                  "nodeType": "ExpressionStatement",
                  "src": "362:24:11"
                }
              ]
            },
            "documentation": "@dev Constructor that gives msg.sender all of existing tokens\r",
            "id": 1065,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4d6f636b54657374546f6b656e",
                    "id": 1050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "302:15:11",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_3ed918a5e7468dad13328025c2dbe10db7a44786654f6d58dfc6669e74d57117",
                      "typeString": "literal_string \"MockTestToken\""
                    },
                    "value": "MockTestToken"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4d5454",
                    "id": 1051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "319:5:11",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c771a8baa207e6ccd775bf14cd47fe2c2499988fa8cd136dd53bef175d7068e6",
                      "typeString": "literal_string \"MTT\""
                    },
                    "value": "MTT"
                  }
                ],
                "id": 1052,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1049,
                  "name": "GameToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1444,
                  "src": "292:9:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_GameToken_$1444_$",
                    "typeString": "type(contract GameToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "292:33:11"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "282:2:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "326:0:11"
            },
            "scope": 1066,
            "src": "271:123:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1067,
        "src": "95:302:11"
      }
    ],
    "src": "0:397:11"
  },
  "legacyAST": {
    "absolutePath": "/D/Vlad/CryptoCurrency/Truffle Projects/Game_Starter/contracts/mocks/MockTestToken.sol",
    "exportedSymbols": {
      "MockTestToken": [
        1066
      ]
    },
    "id": 1067,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1037,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:11"
      },
      {
        "absolutePath": "/D/Vlad/CryptoCurrency/Truffle Projects/Game_Starter/contracts/token/GameToken.sol",
        "file": "../token/GameToken.sol",
        "id": 1038,
        "nodeType": "ImportDirective",
        "scope": 1067,
        "sourceUnit": 1445,
        "src": "28:32:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1039,
              "name": "GameToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1444,
              "src": "121:9:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GameToken_$1444",
                "typeString": "contract GameToken"
              }
            },
            "id": 1040,
            "nodeType": "InheritanceSpecifier",
            "src": "121:9:11"
          }
        ],
        "contractDependencies": [
          1211,
          1444,
          4872,
          6610,
          6737,
          6815,
          6851,
          6876,
          6888,
          6974,
          7523,
          7594,
          7628,
          7671,
          7703,
          7809,
          7911,
          8220
        ],
        "contractKind": "contract",
        "documentation": "@title MockToken\r",
        "fullyImplemented": true,
        "id": 1066,
        "linearizedBaseContracts": [
          1066,
          1444,
          1211,
          6888,
          6815,
          6876,
          6737,
          6851,
          7809,
          7628,
          7594,
          7911,
          6610,
          6974,
          8220,
          7523,
          4872,
          7671,
          7703
        ],
        "name": "MockTestToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1047,
            "name": "AMOUNT",
            "nodeType": "VariableDeclaration",
            "scope": 1066,
            "src": "139:39:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1041,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "139:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_15000000000000000000_by_1",
                "typeString": "int_const 15000000000000000000"
              },
              "id": 1046,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3135",
                "id": 1042,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "165:2:11",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_15_by_1",
                  "typeString": "int_const 15"
                },
                "value": "15"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                },
                "id": 1045,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "hexValue": "3130",
                  "id": 1043,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "170:2:11",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "argumentTypes": null,
                  "hexValue": "3138",
                  "id": 1044,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "176:2:11",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_18_by_1",
                    "typeString": "int_const 18"
                  },
                  "value": "18"
                },
                "src": "170:8:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                }
              },
              "src": "165:13:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_15000000000000000000_by_1",
                "typeString": "int_const 15000000000000000000"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1064,
              "nodeType": "Block",
              "src": "326:68:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1054,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6562,
                      "src": "337:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 1055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "346:5:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "337:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1057,
                  "nodeType": "ExpressionStatement",
                  "src": "337:14:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1059,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8235,
                          "src": "367:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "367:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1061,
                        "name": "AMOUNT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1047,
                        "src": "379:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1058,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7789,
                      "src": "362:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 1062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "362:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1063,
                  "nodeType": "ExpressionStatement",
                  "src": "362:24:11"
                }
              ]
            },
            "documentation": "@dev Constructor that gives msg.sender all of existing tokens\r",
            "id": 1065,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4d6f636b54657374546f6b656e",
                    "id": 1050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "302:15:11",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_3ed918a5e7468dad13328025c2dbe10db7a44786654f6d58dfc6669e74d57117",
                      "typeString": "literal_string \"MockTestToken\""
                    },
                    "value": "MockTestToken"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4d5454",
                    "id": 1051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "319:5:11",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c771a8baa207e6ccd775bf14cd47fe2c2499988fa8cd136dd53bef175d7068e6",
                      "typeString": "literal_string \"MTT\""
                    },
                    "value": "MTT"
                  }
                ],
                "id": 1052,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1049,
                  "name": "GameToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1444,
                  "src": "292:9:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_GameToken_$1444_$",
                    "typeString": "type(contract GameToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "292:33:11"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "282:2:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "326:0:11"
            },
            "scope": 1066,
            "src": "271:123:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1067,
        "src": "95:302:11"
      }
    ],
    "src": "0:397:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-07-20T13:46:21.486Z"
}